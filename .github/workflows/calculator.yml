name: calculator

on:
  push:
  workflow_dispatch:

permissions: {}

env:
  GO_VERSION: "1.19.2"
  SYFT_VERSION: "0.62.1"
  GRYPE_VERSION: "0.53.1"
  SLSA_VERIFIER_VERSION: "1.4.1"
  IMAGE_REF: "ghcr.io/${{ github.repository }}/calculator"

jobs:
  unit-tests:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      checks: write
    steps:
      - name: Check out repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Setup Go
        uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # tag=v3.3.1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@v2.0.0
      - name: Run Unit Tests
        run: go test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml
      - name: Test Report
        uses: dorny/test-reporter@c9b3d0e2bd2a4e96aaf424dbaa31c46b42318226 # tag=v1.6.0
        if: always()
        with:
          name: ðŸ“‹ Unit test report
          path: report.xml
          reporter: java-junit

  build-calculator:
    runs-on: ubuntu-22.04
    outputs:
      calculator-hash: ${{ steps.calculator-hash.outputs.calculator-hash }}
    steps:
      - name: Check out repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Setup Go
        uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # tag=v3.3.1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build Calculator
        run: |
          CGO_ENABLED=0 go build \
            -o calculator \
            -trimpath -buildvcs=false -ldflags "-s -w -buildid=''" \
            ./cmd/calculator
      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3.1.1
        with:
          name: calculator
          path: calculator
      - name: Compute calculator hash
        id: calculator-hash
        run: |
          CALCULATOR_HASH=$(sha256sum calculator | base64 -w0)
          echo calculator-hash=${CALCULATOR_HASH} >> $GITHUB_OUTPUT

  sign-calculator:
    runs-on: ubuntu-22.04
    needs:
      - build-calculator
    steps:
      - name: Install Cosign & Rekor CLI
        uses: sigstore/sigstore-installer@initial
        with:
          cosign-version: "v1.13.1"
          rekor-cli-version: "v1.0.0"
      - name: Download calculator binary
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # tag=v3.0.1
        with:
          name: calculator
      - name: Sign calculator
        run: |
          set -ex
          set -o pipefail
          cosign sign-blob --key env://COSIGN_PRIVATE_KEY calculator > calculator.sig
          # Verify - As documentation & check
          # Local Signature (input: artifact, key, signature)
          cosign verify-blob --key env://COSIGN_PUBLIC_KEY --signature calculator.sig calculator
          # Transparency Log Signature (input: artifact, key)
          echo "$COSIGN_PUBLIC_KEY" > cosign.pub
          uuid=$(rekor-cli search --artifact calculator --public-key cosign.pub --pki-format x509  --operator and | tail -n 1)
          sig=$(rekor-cli get --uuid=$uuid --format=json | jq -r .Body.HashedRekordObj.signature.content)
          cosign verify-blob --key env://COSIGN_PUBLIC_KEY --signature <(echo $sig) calculator
        shell: bash
        env:
          COSIGN_EXPERIMENTAL: 1
          COSIGN_PUBLIC_KEY: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PUBLIC_KEY || secrets.DEV_COSIGN_PUBLIC_KEY }}
          COSIGN_PRIVATE_KEY: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PRIVATE_KEY || secrets.DEV_COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PASSWORD || secrets.DEV_COSIGN_PASSWORD }}
      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3.1.1
        with:
          name: calculator.sig
          path: calculator.sig

  build-calculator-image:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    needs:
      - build-calculator
    steps:
      - name: Check out repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea # tag=v4.1.1
        with:
          images: |
            ${{ env.IMAGE_REF }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=
            type=sha,format=long,prefix=
            type=semver,pattern={{version}}
            type=semver,pattern=v{{version}}
            type=ref,event=branch
      - name: Log in to ghcr.io
        id: docker-login
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download calculator binary
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # tag=v3.0.1
        with:
          name: calculator
      - name: Build and push container image
        id: build-container-image
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3.3.1
        with:
          context: .
          file: cmd/calculator/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  sbom-image:
    runs-on: ubuntu-22.04
    needs:
      - build-calculator-image
    permissions: write-all
    steps:
      - name: Log in to ghcr.io
        id: docker-login
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Cosign CLI
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b # tag=v2.8.1
      # Currently not supported in action: https://github.com/anchore/sbom-action/issues/153
      # Need to download syft and run commands directly
      - name: Download syft & grype
        run: |
          curl -LO https://github.com/anchore/syft/releases/download/v${SYFT_VERSION}/syft_${SYFT_VERSION}_linux_amd64.tar.gz
          tar -xzf syft_${SYFT_VERSION}_linux_amd64.tar.gz
          ./syft version
          curl -LO https://github.com/anchore/grype/releases/download/v${GRYPE_VERSION}/grype_${GRYPE_VERSION}_linux_amd64.tar.gz
          tar -xzf grype_${GRYPE_VERSION}_linux_amd64.tar.gz
          ./grype version
          echo $(pwd) >> $GITHUB_PATH
      - name: Generate SBOM
        run: |
          set -ex
          echo "$COSIGN_PRIVATE_KEY" > cosign.key
          syft attest --key cosign.key ${{ env.IMAGE_REF }}:${{ github.sha }} -o cyclonedx-json > calculator.att.json
          cat calculator.att.json
          echo "${{ env.IMAGE_REF }}:${{ github.sha }}"
          cosign attach attestation ${{ env.IMAGE_REF }}:${{ github.sha }} --attestation calculator.att.json
          # TODO: type should be auto-discovered after issue is resolved:
          # https://github.com/sigstore/cosign/issues/2264
          cosign verify-attestation ${{ env.IMAGE_REF }}:${{ github.sha }} --type 'https://cyclonedx.org/bom' --key env://COSIGN_PUBLIC_KEY
          grype ${{ env.IMAGE_REF }}:${{ github.sha }} --fail-on critical --only-fixed
        shell: bash
        env:
          # COSIGN_EXPERIMENTAL: 1 # This breaks verification with HTTP 404
          COSIGN_PUBLIC_KEY: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PUBLIC_KEY || secrets.DEV_COSIGN_PUBLIC_KEY }}
          COSIGN_PRIVATE_KEY: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PRIVATE_KEY || secrets.DEV_COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PASSWORD || secrets.DEV_COSIGN_PASSWORD }}

  sign-calculator-image:
    runs-on: ubuntu-22.04
    needs:
      - build-calculator-image
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Cosign CLI
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b # tag=v2.8.1
      - name: Log in to ghcr.io
        id: docker-login
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Sign calculator-image
        run: |
          cosign sign \
            --key env://COSIGN_PRIVATE_KEY \
            ${{ env.IMAGE_REF }}
          cosign verify \
            --key env://COSIGN_PUBLIC_KEY \
            ${{ env.IMAGE_REF }}
        shell: bash
        env:
          COSIGN_EXPERIMENTAL: 1
          COSIGN_PUBLIC_KEY: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PUBLIC_KEY || secrets.DEV_COSIGN_PUBLIC_KEY }}
          COSIGN_PRIVATE_KEY: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PRIVATE_KEY || secrets.DEV_COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ startsWith(github.ref, 'refs/tags/v') && secrets.COSIGN_PASSWORD || secrets.DEV_COSIGN_PASSWORD }}

  provenance:
    permissions:
      actions: read
      contents: write
      id-token: write
    needs:
      - build-calculator
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.2.2
    with:
      base64-subjects: "${{ needs.build-calculator.outputs.calculator-hash }}"

  provenance-verify:
    runs-on: ubuntu-22.04
    needs:
      - build-calculator
      - provenance
    steps:
      - name: Download calculator binary
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # tag=v3.0.1
        with:
          name: calculator
      - name: Download provenance
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # tag=v3.0.1
        with:
          name: ${{ needs.provenance.outputs.provenance-name }}
      - name: Install slsa-verifier
        run: |
          curl -LO https://github.com/slsa-framework/slsa-verifier/releases/download/v${{ env.SLSA_VERIFIER_VERSION }}/slsa-verifier-linux-amd64
          install slsa-verifier-linux-amd64 /usr/local/bin/slsa-verifier
      - name: Verify provenance
        run: |
          slsa-verifier verify-artifact calculator \
            --provenance-path calculator.intoto.jsonl \
            --source-uri github.com/datosh/some-action

  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    needs:
      - build-calculator
      - sign-calculator
      - unit-tests
      - provenance
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download calculator binary
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # tag=v3.0.1
        with:
          name: calculator
      - name: Download calculator signature
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # tag=v3.0.1
        with:
          name: calculator.sig
      - name: Download provenance
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # tag=v3.0.1
        with:
          name: ${{ needs.provenance.outputs.provenance-name }}
      - name: Write public key
        run: |
          echo "$COSIGN_PUBLIC_KEY" > cosign.pub
        env:
          COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}
      - name: Release
        uses: ncipollo/release-action@18eadf9c9b0f226f47f164f5373c6a44f0aae169 # v1.11.2
        with:
          draft: true
          artifacts: "calculator,calculator.sig,cosign.pub,calculator.intoto.jsonl"
